{"version":3,"sources":["FirstPage.jsx","components/about/About.jsx","components/contact/Contact.jsx","components/certifications/Certifications.jsx","components/resume/Resume.jsx","components/home/Home.jsx","routes/Routes.jsx","util/util.js","appbar/menubar/MenuDialog.jsx","appbar/Navbar.jsx","App.js","serviceWorker.js","index.js"],"names":["withRouter","props","useEffect","history","push","About","Contact","Certifications","Resume","Home","className","Routes","exact","path","component","FirstPage","theme","createMuiTheme","breakpoints","values","xs","sm","md","lg","xl","xxl","appBarList","useStyles","makeStyles","listItem","textDecoration","color","fontFamily","fontSize","Transition","React","forwardRef","ref","Zoom","direction","MenuDialog","handleClose","toggleDialog","wrapper","useRef","current","focus","classes","Dialog","onClose","open","PaperProps","style","backgroundColor","boxShadow","width","height","TransitionComponent","List","map","barList","ListItem","button","key","name","to","link","onClick","root","flexGrow","appBar","background","menuButton","marginLeft","spacing","title","appBarListStyle","marginRight","navLinkStyle","Navbar","useState","handleOpen","breakpointMatches","useMediaQuery","down","AppBar","position","Toolbar","Typography","IconButton","edge","aria-label","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.abf3c31c.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\nimport { withRouter } from 'react-router';\n\nfunction FirstPage(props) {\n    useEffect(() => props.history.push(\"/portfolio/\"))\n    return (\n        <div>\n        </div>\n    );\n}\n\nexport default withRouter(FirstPage);\n","import React from 'react';\n\nfunction About() {\n    return (\n        <div>\n            <h1>About</h1>\n        </div>\n    );\n}\n\nexport default About;\n","import React from 'react';\n\nfunction Contact() {\n    return (\n        <div>\n            <h1>Contact</h1>\n        </div>\n    );\n}\n\nexport default Contact;\n","import React from 'react';\n\nfunction Certifications() {\n    return (\n        <div>\n            <h1>Certifications</h1>\n        </div>\n    );\n}\n\nexport default Certifications;\n","import React from 'react';\n\nfunction Resume() {\n    return (\n        <div>\n            <h1>Resume</h1>\n        </div>\n    );\n}\n\nexport default Resume;\n","import React from 'react';\nimport './Home.scss';\n\nfunction Home() {\n    return (\n        <>\n            <div className=\"home-container\">\n            </ div>\n        </>\n    );\n}\n\nexport default Home;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport FirstPage from '../FirstPage';\nimport About from '../components/about/About';\nimport Contact from '../components/contact/Contact';\nimport Certifications from '../components/certifications/Certifications';\nimport Resume from '../components/resume/Resume';\nimport Home from '../components/home/Home';\n\nfunction Routes() {\n    return (\n        <div>\n            <Switch>\n                <Route exact path=\"/\" component={FirstPage} />\n                <Route exact path=\"/portfolio/\" component={Home} />\n                <Route exact path=\"/portfolio/about\" component={About} />\n                <Route exact path=\"/portfolio/contact\" component={Contact} />\n                <Route exact path=\"/portfolio/certifications\" component={Certifications} />\n                <Route exact path=\"/portfolio/resume\" component={Resume} />\n            </Switch>\n        </div>\n    );\n}\n\nexport default Routes;\n","import { createMuiTheme } from \"@material-ui/core\";\n\n// -------custom-breakpoints-min-values-----------------//\nexport const breakpointsValues = {\n    xs: 0,\n    sm: 320.01,\n    md: 425.01,\n    lg: 768.01,\n    xl: 1024.01,\n    xxl: 1440.01\n}\n//----------------------\n\n// -------custom-breakpoints-----------------//\nexport const theme = createMuiTheme({\n    breakpoints: {\n        values: breakpointsValues,\n    },\n});\n//----------------------\n\n// -------appbar-menu-----------------//\nexport const appBarList = [\n    {\n        \"name\": \"Home\",\n        \"link\": \"/portfolio/\"\n    },\n    {\n        \"name\": \"About\",\n        \"link\": \"/portfolio/about\"\n    },\n    {\n        \"name\": \"Resume\",\n        \"link\": \"/portfolio/resume\"\n    },\n    {\n        \"name\": \"Certifications\",\n        \"link\": \"/portfolio/certifications\"\n    },\n    {\n        \"name\": \"Contact\",\n        \"link\": \"/portfolio/contact\"\n    }\n];\n//----------------------\n","import React, { useRef, useEffect } from 'react';\nimport { Dialog, List, ListItem, makeStyles, Zoom } from '@material-ui/core';\nimport { appBarList } from '../../util/util';\nimport { NavLink } from 'react-router-dom';\n\nconst useStyles = makeStyles(() => ({\n    listItem: {\n        textDecoration: \"none\",\n        color: \"white\",\n        fontFamily: 'Bangers',\n        fontSize: \"16px\",\n    }\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Zoom direction=\"down\" ref={ref} {...props} />;\n});\n\nconst MenuDialog = props => {\n    const handleClose = () => {\n        props.toggleDialog(false);\n    }\n    const wrapper = useRef();\n    useEffect(() => wrapper.current && wrapper.current.focus());\n\n    const classes = useStyles();\n\n    return (\n        <div ref={wrapper} >\n            <Dialog onClose={handleClose} open={props.open}\n                PaperProps={{\n                    style: {\n                        backgroundColor: \"rgba(0, 0, 0, 0.5)\",\n                        boxShadow: 'none',\n                        width: \"90%\",\n                        height: \"50%\"\n                    },\n                }}\n                TransitionComponent={Transition}\n            >\n                <List>\n                    {\n                        appBarList.map((barList) => (\n                            <ListItem button key={barList.name}>\n                                <NavLink to={barList.link} className={classes.listItem} onClick={handleClose}>\n                                    {barList.name}\n                                </NavLink>\n                            </ListItem>\n                        ))\n                    }\n                </List>\n            </Dialog>\n        </div >\n    );\n}\n\nexport default MenuDialog;","import React, { useState } from 'react';\nimport { Toolbar, AppBar, IconButton, Typography, makeStyles, useMediaQuery } from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport MenuDialog from './menubar/MenuDialog';\nimport { theme, appBarList } from '../util/util';\nimport { NavLink } from 'react-router-dom';\n\nconst useStyles = makeStyles(() => ({\n    root: {\n        flexGrow: 1,\n    },\n    appBar: {\n        background: \"#000000\"\n    },\n    menuButton: {\n        marginLeft: theme.spacing(2),\n    },\n    title: {\n        flexGrow: 1,\n        fontFamily: 'Bangers',\n        fontSize: \"24px\"\n    },\n    appBarListStyle: {\n        marginRight: theme.spacing(2),\n        fontFamily: 'Bangers',\n        fontSize: \"16px\",\n    },\n    navLinkStyle: {\n        textDecoration: \"none\",\n        color: \"white\",\n    }\n}));\n\nfunction Navbar() {\n\n    const [open, handleOpen] = useState(false);\n    const breakpointMatches = useMediaQuery(theme.breakpoints.down('lg'));\n\n    const handleClick = () => {\n        handleOpen(true);\n    }\n\n    const classes = useStyles();\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\" className={classes.appBar}>\n                <Toolbar>\n                    <Typography className={classes.title}>\n                        Akarsh Srivastava\n                    </Typography>\n                    {\n                        breakpointMatches ?\n                            <IconButton edge=\"end\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\" onClick={handleClick}>\n                                <MenuIcon />\n                            </IconButton>\n                            :\n                            appBarList.map(barList => {\n                                return (\n                                    <Typography key={barList.name} className={classes.appBarListStyle}>\n                                        <NavLink to={barList.link} className={classes.navLinkStyle}>\n                                            {barList.name}\n                                        </NavLink>\n                                    </Typography>\n                                )\n                            })\n                    }\n                </Toolbar>\n            </AppBar>\n            {\n                open &&\n                <MenuDialog\n                    open={open}\n                    toggleDialog={handleOpen}\n                />\n            }\n        </div>\n    );\n}\n\nexport default Navbar;\n","import React from 'react';\nimport Routes from './routes/Routes';\nimport Navbar from './appbar/Navbar';\nimport { BrowserRouter } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div>\n        <Navbar />\n        <Routes />\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}